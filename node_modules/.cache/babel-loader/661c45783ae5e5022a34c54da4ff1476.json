{"ast":null,"code":"var _jsxFileName = \"D:\\\\Te\\\\dev\\\\quafundo_client\\\\react-api\\\\src\\\\components\\\\quiz.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nclass Quiz extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = async e => {\n      var _Object$keys$length;\n\n      e.preventDefault();\n      this.resultCount = 0;\n      const answerCount = (_Object$keys$length = Object.keys(this.data).length) !== null && _Object$keys$length !== void 0 ? _Object$keys$length : 0;\n\n      if (answerCount !== this.questionCount) {\n        this.shouldWarn = true;\n        this.setState({\n          waiting: true\n        });\n      } else {\n        this.shouldWarn = false;\n        await fetch(process.env.REACT_APP_API_URL + 'responder', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.data)\n        }).then(async response => {\n          this.setState({\n            results: await response.json(),\n            waiting: false\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      const key = e.target.name.toString();\n      const value = e.target.value.toString();\n      this.data[key] = value;\n    };\n\n    this.state = {\n      results: []\n    };\n    this.data = {};\n    this.questionCount = 0;\n    this.resultCount = 0;\n    this.shouldCount = false;\n    this.shouldWarn = false;\n  }\n\n  renderDescription() {\n    const description = this.props.quiz.description;\n\n    if (typeof description === 'undefined') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 59\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"card-title text-center\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderQuestions() {\n    const questions = this.props.quiz.perguntas;\n\n    if (typeof questions === 'undefined') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 57\n      }, this);\n    }\n\n    if (this.questionCount === 0) {\n      this.questionCount = questions.length;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", question.description, \" \", this.renderAlternatives(question._id, question.alternatives), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderAlternatives(questionId, alternatives) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: alternatives.map((alternative, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: questionId,\n            value: alternative._id,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 34\n          }, this), \" \", alternative.text, \" \", this.renderResult(alternative._id)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderResult(alternativeId) {\n    const result = this.state.results[alternativeId];\n\n    if (result !== undefined) {\n      this.shouldCount = true;\n    }\n\n    if (result === true) {\n      this.resultCount += 1;\n      return \"Acertou!\";\n    }\n\n    if (result === false) {\n      return \"Errou!\";\n    }\n  }\n\n  renderCount() {\n    if (this.shouldWarn) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Voc\\xEA ainda n\\xE3o respondeu todas as perguntas! Revise suas respostas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (this.shouldCount) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Voc\\xEA acertou \", this.resultCount, \" de \", this.questionCount, \" quest\\xF5es \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-10 col-lg-5 mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [this.renderDescription(), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.onSubmit,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [this.renderQuestions(), /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"Enviar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this), this.renderCount()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["D:/Te/dev/quafundo_client/react-api/src/components/quiz.js"],"names":["React","require","config","Quiz","Component","constructor","props","onSubmit","e","preventDefault","resultCount","answerCount","Object","keys","data","length","questionCount","shouldWarn","setState","waiting","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","then","response","results","json","catch","error","console","log","handleChange","key","target","name","toString","value","state","shouldCount","renderDescription","description","quiz","renderQuestions","questions","perguntas","map","question","index","renderAlternatives","_id","alternatives","questionId","alternative","text","renderResult","alternativeId","result","undefined","renderCount","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nrequire('dotenv').config()\r\n\r\nclass Quiz extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {results: []}\r\n        this.data = {}\r\n        this.questionCount = 0\r\n        this.resultCount = 0\r\n        this.shouldCount = false\r\n        this.shouldWarn = false\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n        this.resultCount = 0;\r\n\r\n        const answerCount = Object.keys(this.data).length ?? 0;\r\n\r\n        if (answerCount !== this.questionCount) {\r\n            this.shouldWarn = true;\r\n            this.setState({waiting: true})\r\n        }\r\n        else{\r\n            this.shouldWarn = false;\r\n\r\n            await fetch(process.env.REACT_APP_API_URL + 'responder', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify(this.data),\r\n            })\r\n            .then(async response => { this.setState({results: await response.json(), waiting: false}) })\r\n            .catch( error => {console.log(error)})\r\n        }\r\n\r\n    }\r\n\r\n    handleChange = e => {\r\n        const key = e.target.name.toString()\r\n        const value = e.target.value.toString()\r\n        this.data[key] = value\r\n    }\r\n\r\n    renderDescription() {\r\n        const description = this.props.quiz.description\r\n        \r\n        if (typeof(description) === 'undefined') {return (<div>carregando...</div>)}\r\n\r\n        return(\r\n            <h1 className=\"card-title text-center\">{description}</h1>\r\n        )\r\n    }\r\n\r\n    renderQuestions() {\r\n        const questions = this.props.quiz.perguntas\r\n\r\n        if (typeof(questions) === 'undefined') {return (<div>carregando...</div>)}\r\n\r\n        if (this.questionCount === 0) {this.questionCount = questions.length}\r\n\r\n        return (\r\n            <div>\r\n            {   questions.map( (question, index) => (\r\n                    <div key={index}> {question.description} {this.renderAlternatives(question._id, question.alternatives)} </div> \r\n                )) \r\n            } \r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderAlternatives(questionId,alternatives) {\r\n        return(\r\n            <div>\r\n                {\r\n                    alternatives.map( (alternative, index) => (\r\n                        <div key={index}>\r\n                            <h5> <input type=\"radio\" name={questionId} value={alternative._id}  onChange={this.handleChange}></input> {alternative.text} {this.renderResult(alternative._id)}</h5>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderResult(alternativeId) {\r\n\r\n        const result = this.state.results[alternativeId]\r\n        if (result !== undefined) {this.shouldCount = true}\r\n        \r\n        if (result === true) {\r\n            this.resultCount += 1;\r\n            return \"Acertou!\"\r\n        }\r\n        if (result === false) {\r\n            return \"Errou!\"\r\n        }\r\n\r\n    }\r\n\r\n    renderCount() {\r\n\r\n        if (this.shouldWarn) { \r\n            return (<p> Você ainda não respondeu todas as perguntas! Revise suas respostas.</p>)\r\n        }\r\n\r\n        if (this.shouldCount) {\r\n            return (<p> Você acertou {this.resultCount} de {this.questionCount} questões </p>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className = \"container-fluid\">\r\n                <div className=\"col-md-10 col-lg-5 mx-auto\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            {this.renderDescription()}\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div>\r\n                                    {this.renderQuestions()}\r\n                                    <button>Enviar</button>\r\n                                    {this.renderCount()}\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz"]},"metadata":{},"sourceType":"module"}