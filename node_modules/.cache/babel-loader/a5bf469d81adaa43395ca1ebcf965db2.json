{"ast":null,"code":"var _jsxFileName = \"D:\\\\Te\\\\dev\\\\quafundo_client\\\\react-api\\\\src\\\\components\\\\quiz.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Quiz extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      this.resultCount = 0;\n      await fetch('http://localhost:8000/responder', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.data)\n      }).then(async response => {\n        this.setState({\n          results: await response.json()\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleChange = e => {\n      const key = e.target.name.toString();\n      const value = e.target.value.toString();\n      this.data[key] = value;\n      console.log(\"Data length = \", Object.keys(this.data).length);\n    };\n\n    this.state = {\n      results: []\n    };\n    this.data = {};\n    this.questionCount = 0;\n    this.resultCount = 0;\n    this.shouldCount = false;\n    this.shouldWarn = false;\n  }\n\n  renderDescription() {\n    const description = this.props.quiz.description;\n\n    if (typeof description === 'undefined') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 59\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderQuestions() {\n    const questions = this.props.quiz.perguntas;\n\n    if (typeof questions === 'undefined') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 57\n      }, this);\n    }\n\n    if (this.questionCount === 0) {\n      this.questionCount = questions.length;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", question.description, \" \", this.renderAlternatives(question._id, question.alternatives), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderAlternatives(questionId, alternatives) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: alternatives.map((alternative, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: questionId,\n            value: alternative._id,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 34\n          }, this), \" \", alternative.text, \" \", this.renderResult(alternative._id)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderResult(alternativeId) {\n    const result = this.state.results[alternativeId];\n\n    if (result !== undefined) {\n      this.shouldCount = true;\n    }\n\n    if (result === true) {\n      this.resultCount += 1;\n      return \"Acertou!\";\n    }\n\n    if (result === false) {\n      return \"Errou!\";\n    }\n  }\n\n  renderCount() {\n    if (this.shouldWarn) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Voc\\xEA ainda n\\xE3o respondeu todas as perguntas! Revise suas respostas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }, this);\n    }\n\n    if (this.shouldCount) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Voc\\xEA acertou \", this.resultCount, \" de \", this.questionCount, \" quest\\xF5es \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.renderDescription(), this.renderQuestions(), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), this.renderCount()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["D:/Te/dev/quafundo_client/react-api/src/components/quiz.js"],"names":["React","Quiz","Component","constructor","props","onSubmit","e","preventDefault","resultCount","fetch","method","headers","body","JSON","stringify","data","then","response","setState","results","json","catch","error","console","log","handleChange","key","target","name","toString","value","Object","keys","length","state","questionCount","shouldCount","shouldWarn","renderDescription","description","quiz","renderQuestions","questions","perguntas","map","question","index","renderAlternatives","_id","alternatives","questionId","alternative","text","renderResult","alternativeId","result","undefined","renderCount","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nclass Quiz extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {results: []}\r\n        this.data = {}\r\n        this.questionCount = 0\r\n        this.resultCount = 0\r\n        this.shouldCount = false\r\n        this.shouldWarn = false\r\n    }\r\n\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n        this.resultCount = 0;\r\n\r\n        await fetch('http://localhost:8000/responder', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(this.data),\r\n        })\r\n        .then(async response => { this.setState({results: await response.json()}) })\r\n        .catch( error => {console.log(error)})\r\n    }\r\n\r\n    handleChange = e => {\r\n        const key = e.target.name.toString()\r\n        const value = e.target.value.toString()\r\n        this.data[key] = value\r\n\r\n        console.log(\"Data length = \", Object.keys(this.data).length)\r\n    }\r\n\r\n    renderDescription() {\r\n        const description = this.props.quiz.description\r\n        \r\n        if (typeof(description) === 'undefined') {return (<div>carregando...</div>)}\r\n\r\n        return(\r\n            <h1>{description}</h1>\r\n        )\r\n    }\r\n\r\n    renderQuestions() {\r\n        const questions = this.props.quiz.perguntas\r\n\r\n        if (typeof(questions) === 'undefined') {return (<div>carregando...</div>)}\r\n\r\n        if (this.questionCount === 0) {this.questionCount = questions.length}\r\n\r\n        return (\r\n            <div>\r\n            {   questions.map( (question, index) => (\r\n                    <h3 key={index}> {question.description} {this.renderAlternatives(question._id, question.alternatives)} </h3> \r\n                )) \r\n            } \r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderAlternatives(questionId,alternatives) {\r\n        return(\r\n            <div>\r\n                {\r\n                    alternatives.map( (alternative, index) => (\r\n                        <div key={index}>\r\n                            <h5> <input type=\"radio\" name={questionId} value={alternative._id}  onChange={this.handleChange}></input> {alternative.text} {this.renderResult(alternative._id)}</h5>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderResult(alternativeId) {\r\n\r\n        const result = this.state.results[alternativeId]\r\n        if (result !== undefined) {this.shouldCount = true}\r\n        \r\n        if (result === true) {\r\n            this.resultCount += 1;\r\n            return \"Acertou!\"\r\n        }\r\n        if (result === false) {\r\n            return \"Errou!\"\r\n        }\r\n\r\n    }\r\n\r\n    renderCount() {\r\n        if (this.shouldWarn) { \r\n            return<p> Você ainda não respondeu todas as perguntas! Revise suas respostas.</p>\r\n        }\r\n\r\n        if (this.shouldCount) {\r\n            return (<p> Você acertou {this.resultCount} de {this.questionCount} questões </p>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <form onSubmit={this.onSubmit}>\r\n                <div>\r\n                    {this.renderDescription()}\r\n                    {this.renderQuestions()}\r\n                    <button>Enviar</button>\r\n                    {this.renderCount()}\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz"]},"metadata":{},"sourceType":"module"}