{"ast":null,"code":"var _jsxFileName = \"D:\\\\Te\\\\dev\\\\quafundo_client\\\\react-api\\\\src\\\\components\\\\quiz.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Quiz extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      results: []\n    };\n  }\n\n  componentDidMount() {}\n\n  async onSubmit(e) {\n    e.preventDefault();\n  }\n\n  handleChange(e) {\n    let formData = {};\n    formData[e.target.name.toString()] = e.target.value.toString();\n    console.log(formData);\n  }\n\n  renderDescription() {\n    const description = this.props.quiz.description;\n\n    if (typeof description === 'undefined') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 59\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderQuestions() {\n    const questions = this.props.quiz.perguntas;\n\n    if (typeof questions === 'undefined') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 57\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", question.description, \" \", this.renderAlternatives(question._id, question.alternatives), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderAlternatives(questionId, alternatives) {\n    console.log(alternatives);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: alternatives.map((alternative, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: questionId,\n            value: alternative._id,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 34\n          }, this), \" \", alternative.text, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.renderDescription(), this.renderQuestions(), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["D:/Te/dev/quafundo_client/react-api/src/components/quiz.js"],"names":["React","Quiz","Component","constructor","props","state","questions","results","componentDidMount","onSubmit","e","preventDefault","handleChange","formData","target","name","toString","value","console","log","renderDescription","description","quiz","renderQuestions","perguntas","map","question","index","renderAlternatives","_id","alternatives","questionId","alternative","text","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,SAAS,EAAE,EAAZ;AAAgBC,MAAAA,OAAO,EAAE;AAAzB,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG,CACnB;;AAEa,QAARC,QAAQ,CAACC,CAAD,EAAG;AACbA,IAAAA,CAAC,CAACC,cAAF;AACH;;AAEDC,EAAAA,YAAY,CAACF,CAAD,EAAI;AACZ,QAAIG,QAAQ,GAAG,EAAf;AACAA,IAAAA,QAAQ,CAACH,CAAC,CAACI,MAAF,CAASC,IAAT,CAAcC,QAAd,EAAD,CAAR,GAAqCN,CAAC,CAACI,MAAF,CAASG,KAAT,CAAeD,QAAf,EAArC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACH;;AAEDO,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,WAAW,GAAG,KAAKjB,KAAL,CAAWkB,IAAX,CAAgBD,WAApC;;AAEA,QAAI,OAAOA,WAAP,KAAwB,WAA5B,EAAyC;AAAC,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAAkC;;AAE5E,wBACI;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAEDE,EAAAA,eAAe,GAAG;AACd,UAAMjB,SAAS,GAAG,KAAKF,KAAL,CAAWkB,IAAX,CAAgBE,SAAlC;;AAEA,QAAI,OAAOlB,SAAP,KAAsB,WAA1B,EAAuC;AAAC,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAAkC;;AAE1E,wBACI;AAAA,gBACIA,SAAS,CAACmB,GAAV,CAAe,CAACC,QAAD,EAAWC,KAAX,kBACX;AAAA,wBAAkBD,QAAQ,CAACL,WAA3B,OAAyC,KAAKO,kBAAL,CAAwBF,QAAQ,CAACG,GAAjC,EAAsCH,QAAQ,CAACI,YAA/C,CAAzC;AAAA,SAASH,KAAT;AAAA;AAAA;AAAA;AAAA,cADJ;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAEDC,EAAAA,kBAAkB,CAACG,UAAD,EAAYD,YAAZ,EAA0B;AACxCZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,YAAZ;AACA,wBACI;AAAA,gBAEQA,YAAY,CAACL,GAAb,CAAkB,CAACO,WAAD,EAAcL,KAAd,kBACd;AAAA,+BACI;AAAA,uCAAK;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,IAAI,EAAEI,UAA1B;AAAsC,YAAA,KAAK,EAAEC,WAAW,CAACH,GAAzD;AAA+D,YAAA,QAAQ,EAAE,KAAKjB;AAA9E;AAAA;AAAA;AAAA;AAAA,kBAAL,OAA2GoB,WAAW,CAACC,IAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUN,KAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAEDO,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKzB,QAArB;AAAA,6BACI;AAAA,mBACK,KAAKW,iBAAL,EADL,EAEK,KAAKG,eAAL,EAFL,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AArE8B;;AAwEnC,eAAetB,IAAf","sourcesContent":["import React from 'react'\r\n\r\nclass Quiz extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {questions: [], results: []}\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    async onSubmit(e){\r\n        e.preventDefault();\r\n    }\r\n\r\n    handleChange(e) {\r\n        let formData = {};\r\n        formData[e.target.name.toString()] = e.target.value.toString()\r\n        console.log(formData)\r\n    }\r\n\r\n    renderDescription() {\r\n        const description = this.props.quiz.description\r\n        \r\n        if (typeof(description) === 'undefined') {return (<div>carregando...</div>)}\r\n\r\n        return(\r\n            <h1>{description}</h1>\r\n        )\r\n    }\r\n\r\n    renderQuestions() {\r\n        const questions = this.props.quiz.perguntas\r\n\r\n        if (typeof(questions) === 'undefined') {return (<div>carregando...</div>)}\r\n\r\n        return (\r\n            <div>\r\n            {   questions.map( (question, index) => (\r\n                    <h3 key={index}> {question.description} {this.renderAlternatives(question._id, question.alternatives)} </h3> \r\n                )) \r\n            } \r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderAlternatives(questionId,alternatives) {\r\n        console.log(alternatives)\r\n        return(\r\n            <div>\r\n                {\r\n                    alternatives.map( (alternative, index) => (\r\n                        <div key={index}>\r\n                            <h5> <input type=\"radio\" name={questionId} value={alternative._id}  onChange={this.handleChange}></input> {alternative.text} </h5>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <form onSubmit={this.onSubmit}>\r\n                <div>\r\n                    {this.renderDescription()}\r\n                    {this.renderQuestions()}\r\n                    <button>Enviar</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz"]},"metadata":{},"sourceType":"module"}