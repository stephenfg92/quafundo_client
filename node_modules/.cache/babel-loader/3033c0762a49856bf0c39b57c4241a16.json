{"ast":null,"code":"var _jsxFileName = \"D:\\\\Te\\\\dev\\\\quafundo_client\\\\react-api\\\\src\\\\components\\\\quiz.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Quiz extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      results: []\n    };\n  }\n\n  componentDidMount() {}\n\n  onSubmit() {}\n\n  renderDescription() {\n    const description = this.props.quiz.description;\n\n    if (typeof description === 'undefined') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 59\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderQuestions() {\n    const questions = this.props.quiz.perguntas;\n    console.log(questions);\n\n    if (typeof questions === 'undefined') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 57\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", question.description, \" \", this.renderAlternatives(), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderAlternatives(alternatives) {\n    console.log(alternatives);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.renderDescription(), this.renderQuestions()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["D:/Te/dev/quafundo_client/react-api/src/components/quiz.js"],"names":["React","Quiz","Component","constructor","props","state","questions","results","componentDidMount","onSubmit","renderDescription","description","quiz","renderQuestions","perguntas","console","log","map","question","index","renderAlternatives","alternatives","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,SAAS,EAAE,EAAZ;AAAgBC,MAAAA,OAAO,EAAE;AAAzB,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG,CACnB;;AAEDC,EAAAA,QAAQ,GAAE,CAAE;;AAEZC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,WAAW,GAAG,KAAKP,KAAL,CAAWQ,IAAX,CAAgBD,WAApC;;AAEA,QAAI,OAAOA,WAAP,KAAwB,WAA5B,EAAyC;AAAC,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAAkC;;AAE5E,wBACI;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAEDE,EAAAA,eAAe,GAAG;AACd,UAAMP,SAAS,GAAG,KAAKF,KAAL,CAAWQ,IAAX,CAAgBE,SAAlC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;;AAEA,QAAI,OAAOA,SAAP,KAAsB,WAA1B,EAAuC;AAAC,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAAkC;;AAE1E,wBACI;AAAA,gBACIA,SAAS,CAACW,GAAV,CAAe,CAACC,QAAD,EAAWC,KAAX,kBACX;AAAA,wBAAkBD,QAAQ,CAACP,WAA3B,OAAyC,KAAKS,kBAAL,EAAzC;AAAA,SAASD,KAAT;AAAA;AAAA;AAAA;AAAA,cADJ;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAEDC,EAAAA,kBAAkB,CAACC,YAAD,EAAe;AAC7BN,IAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,iBACK,KAAKZ,iBAAL,EADL,EAEK,KAAKG,eAAL,EAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAhD8B;;AAmDnC,eAAeZ,IAAf","sourcesContent":["import React from 'react'\r\n\r\nclass Quiz extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {questions: [], results: []}\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    onSubmit(){}\r\n\r\n    renderDescription() {\r\n        const description = this.props.quiz.description\r\n        \r\n        if (typeof(description) === 'undefined') {return (<div>carregando...</div>)}\r\n\r\n        return(\r\n            <h1>{description}</h1>\r\n        )\r\n    }\r\n\r\n    renderQuestions() {\r\n        const questions = this.props.quiz.perguntas\r\n        console.log(questions)\r\n\r\n        if (typeof(questions) === 'undefined') {return (<div>carregando...</div>)}\r\n\r\n        return (\r\n            <div>\r\n            {   questions.map( (question, index) => (\r\n                    <h3 key={index}> {question.description} {this.renderAlternatives()} </h3> \r\n                )) \r\n            } \r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderAlternatives(alternatives) {\r\n        console.log(alternatives)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.renderDescription()}\r\n                {this.renderQuestions()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz"]},"metadata":{},"sourceType":"module"}