[{"D:\\Te\\dev\\quafundo_client\\react-api\\src\\index.js":"1","D:\\Te\\dev\\quafundo_client\\react-api\\src\\App.js":"2","D:\\Te\\dev\\quafundo_client\\react-api\\src\\reportWebVitals.js":"3","D:\\Te\\dev\\quafundo_client\\react-api\\src\\components\\quiz.js":"4","D:\\Te\\dev\\quafundo_client\\react-api\\src\\components\\fetchQuiz.js":"5","D:\\Te\\dev\\quafundo_client\\react-api\\src\\components\\listQuizzes.js":"6","d:\\Te\\dev\\quafundo_client\\react-api\\src\\index.js":"7","d:\\Te\\dev\\quafundo_client\\react-api\\src\\App.js":"8","d:\\Te\\dev\\quafundo_client\\react-api\\src\\reportWebVitals.js":"9","d:\\Te\\dev\\quafundo_client\\react-api\\src\\components\\listQuizzes.js":"10","d:\\Te\\dev\\quafundo_client\\react-api\\src\\components\\fetchQuiz.js":"11","d:\\Te\\dev\\quafundo_client\\react-api\\src\\components\\quiz.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":809,"mtime":1621397773613,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":5417,"mtime":1621540593751,"results":"17","hashOfConfig":"14"},{"size":699,"mtime":1621397771707,"results":"18","hashOfConfig":"14"},{"size":1815,"mtime":1621533886161,"results":"19","hashOfConfig":"14"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":809,"mtime":1621397773613,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":1505,"mtime":1621397767837,"results":"24","hashOfConfig":"21"},{"size":699,"mtime":1621397771707,"results":"25","hashOfConfig":"21"},{"size":3652,"mtime":1621397769867,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"53risz",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xmnndr",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Te\\dev\\quafundo_client\\react-api\\src\\index.js",[],["53","54"],"D:\\Te\\dev\\quafundo_client\\react-api\\src\\App.js",[],"D:\\Te\\dev\\quafundo_client\\react-api\\src\\reportWebVitals.js",[],"D:\\Te\\dev\\quafundo_client\\react-api\\src\\components\\quiz.js",["55"],"import React from 'react'\r\nrequire('dotenv').config()\r\n\r\nclass Quiz extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {results: []}\r\n        this.data = {}\r\n        this.questionCount = 0\r\n        this.resultCount = 0\r\n        this.shouldCount = false\r\n        this.shouldWarn = false\r\n    }\r\n\r\n    // Envia as respostas para o servidor.\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n        this.resultCount = 0;\r\n\r\n        const answerCount = Object.keys(this.data).length ?? 0;\r\n\r\n        if (answerCount !== this.questionCount) {\r\n            this.shouldWarn = true;\r\n            this.setState({waiting: true})\r\n        }\r\n        else{\r\n            this.shouldWarn = false;\r\n\r\n            await fetch(process.env.REACT_APP_API_URL + 'responder', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify(this.data),\r\n            })\r\n            .then(async response => { this.setState({results: await response.json(), waiting: false}) })\r\n            .catch( error => {console.log(error)})\r\n        }\r\n\r\n    }\r\n\r\n    // Conforme o usuário seleciona alternativas, acumula dados para enviar ao servidor.\r\n    handleChange = e => {\r\n        const key = e.target.name.toString()\r\n        const value = e.target.value.toString()\r\n        this.data[key] = value\r\n    }\r\n\r\n    // Apresenta a descrição do quiz.\r\n    renderDescription() {\r\n        const description = this.props.quiz.description\r\n        \r\n        if (typeof(description) === 'undefined') {return (<div>carregando...</div>)}\r\n\r\n        const imgURL = this.props.quiz.imgURL\r\n        if (typeof(imgURL) !== 'undefined' && typeof(imgURL) !== null) {\r\n            return (\r\n                <div style={{backgroundImage: `url(${imgURL})`}}><h1 className=\"card-title text-center font-weight-bold py-4\">{description}</h1></div>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <h1 className=\"card-title text-center\">{description}</h1>\r\n        )\r\n    }\r\n\r\n    // Apresenta cada uma das perguntas do quiz.\r\n    renderQuestions() {\r\n        const questions = this.props.quiz.perguntas\r\n\r\n        if (typeof(questions) === 'undefined') {return (<div>carregando...</div>)}\r\n\r\n        if (this.questionCount === 0) {this.questionCount = questions.length}\r\n\r\n        return (\r\n            <div>\r\n            {   questions.map( (question, index) => (\r\n                    <div key={index}> <h3 className=\"text-center mb-3\"> {question.description} </h3> {this.renderAlternatives(question._id, question.alternatives)} </div> \r\n                )) \r\n            } \r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Apresenta as alternativas de cada questão\r\n    renderAlternatives(questionId,alternatives) {\r\n        return(\r\n            <div>\r\n                {\r\n                    alternatives.map( (alternative, index) => (\r\n                        <div className=\"mb-3\" key={index}>\r\n                            <h5> <input type=\"radio\" name={questionId} value={alternative._id}  onChange={this.handleChange}></input> <span className=\"ml-2\">{alternative.text} {this.renderResult(alternative._id)}</span></h5>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Indica se o usuário acertou ou não determinada pergunta.\r\n    renderResult(alternativeId) {\r\n\r\n        const result = this.state.results[alternativeId]\r\n        if (result !== undefined) {this.shouldCount = true}\r\n        \r\n        if (result === true) {\r\n            this.resultCount += 1;\r\n            return <i className=\"bi-check-circle-fill text-success ml-2\" role=\"img\" aria-label=\"acertou\"></i>\r\n        }\r\n        if (result === false) {\r\n            return <i className=\"bi-x-circle-fill text-danger ml-2\" role=\"img\" aria-label=\"errou\"></i>\r\n        }\r\n\r\n    }\r\n\r\n    // Faz a contagem de acertos\r\n    renderCount() {\r\n\r\n        if (this.shouldWarn) { \r\n            return (<span className=\"ml-2\"> Você ainda não respondeu todas as perguntas!</span>)\r\n        }\r\n\r\n        if (this.shouldCount) {\r\n            return (<span className=\"ml-2\"> Você acertou {this.resultCount} de {this.questionCount} questões </span>)\r\n        }\r\n    }\r\n\r\n    // Apresnta o botão para envio das respostas ao servidor\r\n    renderButton() {\r\n        if (!this.shouldWarn) {\r\n            return <button className=\"btn btn-outline-primary\">Enviar</button>\r\n        }\r\n        else {\r\n            return <button className=\"btn btn-outline-danger\">Enviar</button>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className = \"container-fluid\">\r\n                <div className=\"col-md-10 col-lg-5 mx-auto\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            {this.renderDescription()}\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div>\r\n                                    {this.renderQuestions()}\r\n                                        {this.renderButton()}\r\n                                        {this.renderCount()}\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz","D:\\Te\\dev\\quafundo_client\\react-api\\src\\components\\fetchQuiz.js",[],"D:\\Te\\dev\\quafundo_client\\react-api\\src\\components\\listQuizzes.js",[],"d:\\Te\\dev\\quafundo_client\\react-api\\src\\index.js",[],"d:\\Te\\dev\\quafundo_client\\react-api\\src\\App.js",[],"d:\\Te\\dev\\quafundo_client\\react-api\\src\\reportWebVitals.js",[],"d:\\Te\\dev\\quafundo_client\\react-api\\src\\components\\listQuizzes.js",[],"d:\\Te\\dev\\quafundo_client\\react-api\\src\\components\\fetchQuiz.js",[],"d:\\Te\\dev\\quafundo_client\\react-api\\src\\components\\quiz.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":54,"column":66,"nodeType":"62","messageId":"63","endLine":54,"endColumn":70},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"valid-typeof","Invalid typeof comparison value.","Literal","invalidValue","no-global-assign","no-unsafe-negation"]